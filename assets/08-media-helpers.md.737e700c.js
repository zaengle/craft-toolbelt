import{_ as e,o as a,c as r,U as o}from"./chunks/framework.76b79cb5.js";const _=JSON.parse('{"title":"Media Helpers","description":"","frontmatter":{},"headers":[],"relativePath":"08-media-helpers.md","filePath":"08-media-helpers.md"}'),t={name:"08-media-helpers.md"},s=o('<h1 id="media-helpers" tabindex="-1">Media Helpers <a class="header-anchor" href="#media-helpers" aria-label="Permalink to &quot;Media Helpers&quot;">​</a></h1><h2 id="parsevideourl-string-url-array" tabindex="-1"><code>parseVideoUrl(string $url): array</code> <a class="header-anchor" href="#parsevideourl-string-url-array" aria-label="Permalink to &quot;`parseVideoUrl(string $url): array`&quot;">​</a></h2><p><code>parseVideoUrl()</code> takes the URL to YouTube or Vimeo url and returns an array with <code>provider</code> , <code>videoId</code> , <code>url</code> string keys, as well as a <code>thumbnail</code> array key.</p><p><code>thumbnail</code> is an array with url keys for <code>max</code>, <code>lg</code>, <code>md</code> &amp; <code>sm</code> sizes.</p><blockquote><h3 id="⚠-heads-up" tabindex="-1">⚠ <strong>Heads-up</strong> <a class="header-anchor" href="#⚠-heads-up" aria-label="Permalink to &quot;⚠&amp;nbsp;**Heads-up**&quot;">​</a></h3><p>As Vimeo do not have a predictable URL structure for thumbnails, this function uses the (free) vumbnail.com service to generate thumbnail URLs. It works great, but as a free third-party service, it&#39;s not necessarily guaranteed to be around forever...</p></blockquote>',5),d=[s];function i(c,l,n,p,u,h){return a(),r("div",null,d)}const b=e(t,[["render",i]]);export{_ as __pageData,b as default};
