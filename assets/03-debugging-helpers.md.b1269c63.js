import{_ as s,c as n,o as a,a as e}from"./app.8d518e7f.js";const F=JSON.parse('{"title":"Debugging helpers","description":"","frontmatter":{},"headers":[{"level":2,"title":"dd() / d() all the things","slug":"dd-d-all-the-things","link":"#dd-d-all-the-things","children":[]}],"relativePath":"03-debugging-helpers.md"}'),l={name:"03-debugging-helpers.md"},p=e(`<h1 id="debugging-helpers" tabindex="-1">Debugging helpers <a class="header-anchor" href="#debugging-helpers" aria-hidden="true">#</a></h1><p>Out of the box, Craft gives us a <code>{% dd %}</code> tag in addition to Twig&#39;s native <code>dump</code> filter. Both are fine, but neither are great, particularly when you want to quick modify existing code to sanity check something.</p><h2 id="dd-d-all-the-things" tabindex="-1"><code>dd()</code> / <code>d()</code> all the things <a class="header-anchor" href="#dd-d-all-the-things" aria-hidden="true">#</a></h2><p>This plugin adds:</p><div class="language-twig"><button class="copy"></button><span class="lang">twig</span><pre><code><span class="line"><span style="color:#676E95;">{# dd as a function #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ dd(</span><span style="color:#A6ACCD;">entry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myField</span><span style="color:#89DDFF;">) }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">{# dump as a function #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ </span><span style="color:#82AAFF;">dump</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">entry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myField</span><span style="color:#89DDFF;">) }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">{# d() shorthand #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ d(</span><span style="color:#A6ACCD;">entry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myField</span><span style="color:#89DDFF;">) }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">{# upgrade dump filter to larapack style output #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ </span><span style="color:#A6ACCD;">entry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myField</span><span style="color:#89DDFF;"> | </span><span style="color:#A6ACCD;">dump</span><span style="color:#89DDFF;"> }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">{#  | d shorthand #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ </span><span style="color:#A6ACCD;">entry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myField</span><span style="color:#89DDFF;"> | </span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;"> }}</span></span>
<span class="line"></span></code></pre></div>`,5),o=[p];function t(c,r,d,i,D,y){return a(),n("div",null,o)}const g=s(l,[["render",t]]);export{F as __pageData,g as default};
