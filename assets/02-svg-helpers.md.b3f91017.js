import{_ as s,c as a,o,O as e}from"./chunks/framework.97fbe135.js";const h=JSON.parse('{"title":"SVG helpers","description":"","frontmatter":{},"headers":[],"relativePath":"02-svg-helpers.md"}'),n={name:"02-svg-helpers.md"},l=e(`<h1 id="svg-helpers" tabindex="-1">SVG helpers <a class="header-anchor" href="#svg-helpers" aria-label="Permalink to &quot;SVG helpers&quot;">​</a></h1><p>Toolbelt adds two new options for working with SVG files in your templates.</p><h2 id="inlinesvg-string-asset-file" tabindex="-1"><code>inlineSvg(string|Asset $file)</code> <a class="header-anchor" href="#inlinesvg-string-asset-file" aria-label="Permalink to &quot;\`inlineSvg(string|Asset $file)\`&quot;">​</a></h2><p>Output an SVG image inline in your template. String paths are resolved relative to <code>svgRoot</code> as set in <code>config/toolbelt.php</code>, or pass an <code>Asset</code>.</p><div class="language-twig"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">{# if &#39;svgRoot&#39; =&gt; &#39;@root/assets/svg&#39; is set in config/toolbelt.php #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ inlineSvg(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">email</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">) }}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# Will inline the SVG file found at \`@root/assets/svg/email\` #}</span></span></code></pre></div><h2 id="usesvgsprite-string-svgslug-array-attrs-array-opts" tabindex="-1"><code>useSvgSprite(string $svgSlug, array $attrs = [], array $opts = [])</code> <a class="header-anchor" href="#usesvgsprite-string-svgslug-array-attrs-array-opts" aria-label="Permalink to &quot;\`useSvgSprite(string $svgSlug, array $attrs = [], array $opts = [])\`&quot;">​</a></h2><p>Output an <code>&lt;svg&gt;</code> that references a symbol in an SVG sprite via <code>&lt;use xlink:href=&quot;#{symbolId}&quot;&gt;</code>. Example (using default options):</p><div class="language-twig"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">{# This... #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ useSvgSprite(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">email</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">, { </span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">w-40</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}, { </span><span style="color:#A6ACCD;">title</span><span style="color:#89DDFF;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Email icon</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> }) }}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# ...will output... #}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">w-40</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">viewBox</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0 0 32 32</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">aria-hidden</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Email Icon</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">use</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xlink:href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#sprite-email</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">use</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><br><h4 id="_1-svgslug-string-required" tabindex="-1">1. <code>$svgSlug &lt;string&gt;</code> (required) <a class="header-anchor" href="#_1-svgslug-string-required" aria-label="Permalink to &quot;1. \`$svgSlug &lt;string&gt;\` (required)&quot;">​</a></h4><p>The handle for the SVG symbol that you want to display. This will often be the same as the filename of the SVG prior to it being added to the sprite. If your sprite symbols have a shared prefix, set that via the <code>svgSpriteIdPrefix</code> config setting (see below) and omit it here</p><h4 id="_2-attrs-array-optional" tabindex="-1">2. <code>$attrs &lt;array&gt;</code> (optional) <a class="header-anchor" href="#_2-attrs-array-optional" aria-label="Permalink to &quot;2. \`$attrs &lt;array&gt;\` (optional)&quot;">​</a></h4><p>An array of HTML attribute key / value pairs to apply to the injected <code>&lt;svg&gt;</code> elemment. Will be merged with any <code>svgSpriteDefaultAttrs</code> set in <code>config/toolbelt.php</code>, before being passed to Craft&#39;s <a href="https://craftcms.com/docs/4.x/dev/functions.html#attr" target="_blank" rel="noreferrer"><code>attr()</code></a> Twig function.</p><p>See <a href="#configuration-templating">below for defaults</a>.</p><h4 id="_3-opts-array-optional" tabindex="-1">3. <code>$opts &lt;array&gt;</code> (optional) <a class="header-anchor" href="#_3-opts-array-optional" aria-label="Permalink to &quot;3. \`$opts &lt;array&gt;\` (optional)&quot;">​</a></h4><p>Additional options to pass to the template. Will be merged with <code>svgSpriteDefaultOpts</code> from <code>config/toolbelt.php</code>. The bundled template supports:</p><ul><li><code>opts.viewBox &lt;string&gt;</code>: define the viewBox for the SVG, if omitted it will be generated from <code>opts.width</code> + <code>opts.height</code></li><li><code>opts.width &lt;int&gt;</code>: define the width of the SVG viewBox, defaults to <code>32</code>, can be overriden in <code>config/toolbelt.php</code></li><li><code>opts.height &lt;int&gt;</code>: define the height of the SVG viewBox, defaults to the value of <code>opts.height</code> (i.e assumes square SVG artboards)</li><li><code>opts.title &lt;string&gt;</code>: (optional) contents of a <code>&lt;title&gt;</code> element inside the SVG</li></ul><p>See <a href="#configuration-templating">below for defaults</a>.</p><h3 id="configuration-templating" tabindex="-1">Configuration &amp; Templating <a class="header-anchor" href="#configuration-templating" aria-label="Permalink to &quot;Configuration &amp; Templating&quot;">​</a></h3><p>The following config settings are available for this helper:</p><ol><li><code>svgSpriteIdPrefix &lt;string&gt;</code></li></ol><p>Configure this to match the prefix (if any) applied to symbol IDs in your sprite:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// match this to the symbol ID prefix applied by your front end build process</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">svgSpriteIdPrefix</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">icon-</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">];</span></span></code></pre></div><ol start="2"><li><code>svgSpriteDefaultAttrs &lt;array&gt;</code></li></ol><p>Specify HTML attributes that should be included on every <code>&lt;svg&gt;</code> element output by the helper. Defaults to:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aria-hidden</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div><p><strong>Note:</strong> You can override any keys from <code>svgSpriteDefaultAttrs</code> via the <code>$attrs</code> parameter when calling <code>useSvgSprite()</code>.</p><ol start="3"><li><code>svgSpriteDefaultOpts &lt;array&gt;</code></li></ol><p>Provide default options to the template. Configure this to match the <code>width</code> and <code>height</code> of the SVGs that are compiled into the sprite:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// e.g. for SVG icons that are on 50x50 artboards</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">width</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">height</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">];</span></span></code></pre></div><ol start="4"><li><code>svgUseSpriteTemplate &lt;string&gt;</code></li></ol><p>Overide the built-in output template if it doesn&#39;t meet your needs by providing a path to a new one:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// resolved within your site&#39;s templates/ directory</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">svgUseSpriteTemplate</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">_special/useSvgSprite</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">];</span></span></code></pre></div><p>See <a href="https://github.com/zaengle/craft-toolbelt/blob/main/src/templates/useSvgSprite.twig" target="_blank" rel="noreferrer">the bundled template</a> as a starting point</p><h3 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>Toolbelt does not handle creating an SVG sprite for you. You should do that via your front end build process. This method just helps with consuming/using SVG sprites in your templates.</li><li>You will also need to inject your SVG sprite into your template somewhere. You can do this with <code>inlineSvg()</code> above, or using ajax/<code>fetch()</code> (preferable as then the sprite can be cached across pageloads).</li></ul><p>Example using <code>fetch()</code>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">argument</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/path-to/sprite.svg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">text</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">sprite</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">div</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hidden</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aria-hidden</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sprite</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insertBefore</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">childNodes</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)()</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,39),t=[l];function p(r,c,i,y,D,F){return o(),a("div",null,t)}const g=s(n,[["render",p]]);export{h as __pageData,g as default};
