import{_ as a,c as s,o as i,ae as r}from"./chunks/framework.CBTkueSR.js";const c=JSON.parse('{"title":"Eager loading helpers","description":"","frontmatter":{},"headers":[],"relativePath":"04-eager-loading-helpers.md","filePath":"04-eager-loading-helpers.md"}'),t={name:"04-eager-loading-helpers.md"};function n(l,e,o,d,h,p){return i(),s("div",null,[...e[0]||(e[0]=[r(`<h1 id="eager-loading-helpers" tabindex="-1">Eager loading helpers <a class="header-anchor" href="#eager-loading-helpers" aria-label="Permalink to &quot;Eager loading helpers&quot;">​</a></h1><h2 id="eagerload-element-array-elements-array-eagerloadingconfig" tabindex="-1"><code>eagerLoad(Element|array $elements, array $eagerLoadingConfig)</code> <a class="header-anchor" href="#eagerload-element-array-elements-array-eagerloadingconfig" aria-label="Permalink to &quot;\`eagerLoad(Element|array $elements, array $eagerLoadingConfig)\`&quot;">​</a></h2><p><code>eagerLoad()</code> provides sugar over the <a href="https://docs.craftcms.com/api/v3/craft-services-elements.html#method-eagerloadelements" target="_blank" rel="noreferrer">somewhat verbose service method for eager loading fields on Elements</a>.</p><p>This is particularly useful for adding eager loading to automatically defined route-based variables like <code>entry</code> and <code>category</code>, or to Global sets.</p><p><code>eagerLoad</code> combines the first two parameters from the native service method into one, by inferring the classname from the passed Element(s):</p><div class="language-twig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">{# Using the helper #}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eagerLoad(entry, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myAssetField&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) %}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">{# Without the helper #}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> craft.app.elements.eagerLoadElements(className(entry), [entry], [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myAssetField&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) %}</span></span></code></pre></div>`,6)])])}const k=a(t,[["render",n]]);export{c as __pageData,k as default};
