import{_ as s,c as a,o as n,O as l}from"./chunks/framework.d7e37bdc.js";const d=JSON.parse('{"title":"Utility Template Functions","description":"","frontmatter":{},"headers":[],"relativePath":"01-utility-fns.md","filePath":"01-utility-fns.md"}'),o={name:"01-utility-fns.md"},t=l(`<h1 id="utility-template-functions" tabindex="-1">Utility Template Functions <a class="header-anchor" href="#utility-template-functions" aria-label="Permalink to &quot;Utility Template Functions&quot;">​</a></h1><h2 id="classnames-cx" tabindex="-1"><code>classNames</code> / <code>cx()</code> * <a class="header-anchor" href="#classnames-cx" aria-label="Permalink to &quot;\`classNames\` / \`cx()\` *&quot;">​</a></h2><p>Wraps the <a href="https://github.com/newridetech/php-classnames/" target="_blank" rel="noreferrer"><code>newridetech/php-classnames</code></a> package for Twig allowing you to programmatically build valid class and other HTML attributes:</p><div class="language-twig"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> {{ attr({</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">: cx(</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">break classes up </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">over mutliple lines</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">without worrying about whitespace / concatenation issues</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  )</span></span>
<span class="line"><span style="color:#89DDFF;">}) }}&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# Conditionally output classes #}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> {{ attr({</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">: cx({</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text-red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">: </span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isFeatured</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">underline</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">: </span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isFeatured</span><span style="color:#89DDFF;"> </span><span style="color:#A6ACCD;">and</span><span style="color:#89DDFF;"> </span><span style="color:#A6ACCD;">isCurrent</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    })</span></span>
<span class="line"><span style="color:#89DDFF;">}) }}&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">{% </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;"> </span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;"> ?? </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">span</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#A6ACCD;">href</span><span style="color:#89DDFF;">: </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">: cx(</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">break classes up </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">over mutliple lines</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">without worrying about whitespace / concatenation issues</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  )</span></span>
<span class="line"><span style="color:#89DDFF;">} %}</span></span>
<span class="line"><span style="color:#A6ACCD;">  Some content</span></span>
<span class="line"><span style="color:#89DDFF;">{% </span><span style="color:#A6ACCD;">endtag</span><span style="color:#89DDFF;"> %}</span></span></code></pre></div><p>* This functionality is based on the <a href="https://github.com/vigetlabs/craft-classnames" target="_blank" rel="noreferrer">Classnames plugin by Viget</a></p><h2 id="parsevideourl" tabindex="-1"><code>parseVideoUrl()</code> <a class="header-anchor" href="#parsevideourl" aria-label="Permalink to &quot;\`parseVideoUrl()\`&quot;">​</a></h2><p>Parses a YouTube or Vimeo URL to extract its video ID, provider name and an array of thumbnail image URLs.</p><div class="language-twig"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">{# YouTube #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ </span><span style="color:#82AAFF;">dump</span><span style="color:#89DDFF;">(extractVideoIdFromUrl(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://www.youtube.com/watch?v=dQw4w9WgXcQ</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)) }}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# returns</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;provider&quot;: &quot;youtube&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;videoId&quot;: &quot;dQw4w9WgXcQ&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;url&quot;: &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;thumbnail&quot;: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;max&quot;: &quot;http://img.youtube.com/vi/dQw4w9WgXcQ/maxresdefault.jpg&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;lg&quot;: &quot;http://img.youtube.com/vi/dQw4w9WgXcQ/hqdefault.jpg&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;md&quot;: &quot;http://img.youtube.com/vi/dQw4w9WgXcQ/mqdefault.jpg&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;sm&quot;: &quot;http://img.youtube.com/vi/dQw4w9WgXcQ/sddefault.jpg&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# Vimeo #}</span></span>
<span class="line"><span style="color:#89DDFF;">{{ </span><span style="color:#82AAFF;">dump</span><span style="color:#89DDFF;">(extractVideoIdFromUrl(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://vimeo.com/783453584</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)) }}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# returns</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;provider&quot;: &quot;vimeo&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;videoId&quot;: &quot;783453584&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;url&quot;: &quot;https://vimeo.com/783453584&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        &quot;thumbnail&quot;: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;max&quot;: &quot;https://vumbnail.com/783453584.jpg&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;lg&quot;: &quot;https://vumbnail.com/783453584_large.jpg&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;md&quot;: &quot;https://vumbnail.com/783453584_medium.jpg&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;sm&quot;: &quot;https://vumbnail.com/783453584_small.jpg&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#}</span></span></code></pre></div><p>If the URL is not a valid YouTube or Vimeo URL, <code>null</code> is returned, unless <code>devMode</code> is enabled, in which case an exception is thrown.</p><h2 id="viteasset" tabindex="-1"><code>viteAsset()</code> <a class="header-anchor" href="#viteasset" aria-label="Permalink to &quot;\`viteAsset()\`&quot;">​</a></h2><p>Returns the path to a Vite asset within the <code>src/assets/</code> directory, allowing for the value of <code>i<wbr>mport.meta.env.DEV</code> + asset hashing in production</p><div class="language-twig"><button title="Copy Code" class="copy"></button><span class="lang">twig</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\`\`\`twig</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;{{ viteAsset(&#39;</span><span style="color:#C3E88D;">img/logo.svg</span><span style="color:#89DDFF;">&#39;) }}&quot;</span><span style="color:#89DDFF;"> &gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# Outputs this when using Vite devserver #}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://host.name:&lt;VITE_PORT&gt;/src/assets/img/logo.svg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">) }}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> &gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{# But something this in prod #}</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;img src=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/</span><span style="color:#C792EA;">some</span><span style="color:#89DDFF;">/</span><span style="color:#C792EA;">path</span><span style="color:#89DDFF;">/</span><span style="color:#C792EA;">logo-</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">ASSET</span><span style="color:#89DDFF;">_HASH&gt;</span><span style="color:#A6ACCD;">.svg&quot;) }}&quot; &gt;</span></span></code></pre></div>`,12),p=[t];function e(c,r,i,y,D,F){return n(),a("div",null,p)}const m=s(o,[["render",e]]);export{d as __pageData,m as default};
